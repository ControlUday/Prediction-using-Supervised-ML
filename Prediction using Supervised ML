print("By Uday Sehgal")
from google.colab import files
Uploaded=files.upload()
import pandas as pd
data = pd.read_excel("Data.xlsx")
print("Data imported successfully")
#Print first five row of our dataset
data.head()
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
data.plot(x='Hours', y='Scores', style='o')    
plt.title('Hours vs Percentage')    
plt.xlabel('The Hours Studied')    
plt.ylabel('The Percentage Score')    
plt.show()
X = data.iloc[:, :-1].values    
y = data.iloc[:, 1].values
from sklearn.model_selection import train_test_split    
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state=0)
from sklearn.linear_model import LinearRegression    
model = LinearRegression()    
model.fit(X_train, y_train)   
  
print("Training ... Completed !.")
print(model.intercept_)
print(model.coef_)
# Plotting the regression line
line = model.coef_ * X+ model.intercept_  

# Plotting for the test data

plt.scatter(X, y)
plt.plot(X, line,'m')
plt.title("Plotting the regression Line")
plt.ylabel('Scores')
plt.xlabel('Hours')
plt.show()
y_pred = model.predict(X_test) # Predicting the scores
y_pred
data = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
data
plt.scatter(X_train,y_train,color='red')
plt.plot(X_train,model.predict(X_train),color='m')
plt.title('Training Set')
plt.xlabel('Hours')
plt.ylabel('Scores');
print(model.predict([[9.25]]))
rom sklearn import metrics 
print('Mean Absolute Error:',metrics.mean_absolute_error(y_test,y_pred))
